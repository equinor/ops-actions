# TODO(@hknutsen): Write a description.

on:
  workflow_call:
    inputs:
      environment:
        description: The environment that the job references.
        required: true
        type: string

      client_id:
        description: The client ID of the Azure Service Principal used for authenticating to Azure.
        required: true
        type: string

      tenant_id:
        description: The tenant ID of the Azure Service Principal used for authenticating to Azure.
        required: true
        type: string

      subscription_id:
        description: The ID of the Azure Subscription to provision the Azure resources for.
        required: true
        type: string

      server_name:
        description: ""
        required: true
        type: string

      resource_group_name:
        description: ""
        required: true
        type: string

      vault_name:
        description: ""
        required: true
        type: string

      secret_name:
        description: ""
        required: true
        type: string

    secrets:
      client_secret:
        description: The client secret of the Azure Service Principal used for authenticating to Azure.
        required: true

jobs:
  admin-password:
    name: Admin password
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2.3.4
        with:
          repository: equinor/ops-actions

      - name: Run PowerShell script
        uses: azure/powershell@v1
        env:
          CLIENT_ID: ${{ inputs.client_id }}
          CLIENT_SECRET: ${{ secrets.client_secret }}
          TENANT_ID: ${{ inputs.tenant_id }}
          SUBSCRIPTION_ID: ${{ inputs.subscription_id }}
          SERVER_NAME: ${{ inputs.server_name }}
          RESOURCE_GROUP_NAME: ${{ inputs.resource_group_name }}
          VAULT_NAME: ${{ inputs.vault_name }}
        with:
          inlineScript: |
            $ClientSecret = ConvertTo-SecureString $env:CLIENT_SECRET -AsPlainText -Force
            $Credential = New-Object System.Management.Automation.PSCredential($env:CLIENT_ID, $ClientSecret)
            $null = Connect-AzAccount -ServicePrincipal -TenantId $env:TENANT_ID -Credential $Credential
            Set-AzContext -SubscriptionId $env:SUBSCRIPTION_ID
            ./scripts/Update-SqlServerPassword -ServerName $env:SERVER_NAME -ResourceGroupName $env:RESOURCE_GROUP_NAME -VaultName $env:VAULT_NAME -InformationAction Continue
            Disconnect-AzAccount
          azPSVersion: "5.9.0"
