# Install Terraform, configure OpenID Connect (OIDC) authentication, create a Terraform plan, and apply the plan on push to branch 'main'.

on:
  workflow_call:
    inputs:
      environment:
        description: The environment that the job references.
        type: string
        required: true

      working_directory:
        description: The working directory to run the Terraform commands in.
        type: string
        required: false
        default: '.'

      terraform_version:
        description: The version of Terraform to install.
        type: string
        required: false
        default: latest

    secrets:
      arm_client_id:
        description: The client ID of the Azure AD service principal to use for authenticating to Azure.
        required: true

      arm_subscription_id:
        description: The ID of the Azure subscription to create the resources in.
        required: true

      arm_tenant_id:
        description: The ID of the Azure tenant to create the resources in.
        required: true

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    # Set permissions granted to GITHUB_TOKEN.
    # Required when using OpenID Connect for authenticating to Azure.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.arm_client_id }}
          subscription-id: ${{ secrets.arm_subscription_id }}
          tenant-id: ${{ secrets.arm_tenant_id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
          ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'schedule'
        run: terraform apply -auto-approve
