# Login to Azure using OpenID Connect (OIDC), then deploy Docker image or package to Azure Web App.
name: â™» azure-webapp

on:
  workflow_call:
    inputs:
      environment:
        description: The name of the GitHub environment that this job references.
        type: string
        required: false

      image:
        description: The Docker image to deploy. Required if "artifact_name" is not set.
        type: string
        required: false

      artifact_name:
        description: The name of the artifact containing the package to deploy. Required if "image" is not set.
        type: string
        required: false

      app_name:
        description: The name of the Azure Web App to deploy the Docker image to.
        type: string
        required: true

      app_settings:
        description: App settings to configure for the Azure Web App. Inline JSON.
        type: string
        required: false

      client_id:
        description: The client ID of the Azure AD service principal to use for authenticating to Azure.
        type: string
        required: true

      subscription_id:
        description: The ID of the Azure subscription containing the Azure Web App.
        type: string
        required: true

      tenant_id:
        description: The ID of the Azure tenant containing the Azure Web App.
        type: string
        required: true

jobs:
  azure-webapp:
    name: Azure Webapp
    # The steps for this job assume that OS is Ubuntu.
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy.outputs.webapp-url }}

    # Set permissions required to login to Azure using OIDC.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        if: inputs.artifact_name != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}

      - name: Unzip
        if: inputs.artifact_name != ''
        env:
          ZIP_FILE: ${{ inputs.artifact_name }}.zip
        run: |
          unzip "$ZIP_FILE"
          rm "$ZIP_FILE"

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ inputs.client_id }}
          subscription-id: ${{ inputs.subscription_id }}
          tenant-id: ${{ inputs.tenant_id }}

      - name: Deploy
        id: deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ inputs.app_name }}
          images: ${{ inputs.image }}

      - name: Configure app settings
        if: inputs.app_settings != ''
        env:
          APP_NAME: ${{ inputs.app_name }}
          APP_SETTINGS: ${{ inputs.app_settings }}
        run: |
          APP_ID=$(az webapp list --query "[?name=='$APP_NAME'].id" --output tsv)
          az webapp config appsettings set --ids "$APP_ID" --settings "$APP_SETTINGS" --output json
