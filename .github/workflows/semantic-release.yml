# TODO: update intro to be more generic, but specify that it uses Convential Commits by default.

# Create a GitHub release on branch 'main' using semantic-release with the Conventional Commits preset.
#
# References:
# - semantic-release: https://semantic-release.gitbook.io
# - Conventional Commits: https://www.conventionalcommits.org

# TODO: pin to latest patch release for all packages.

on:
  # TODO: use this from another workflow instead.
  push:
    branches:
      - main

  # TODO: look into standardizing list format (e.g., space-separated only)
  workflow_call:
    inputs:
      branches:
        description: A comma-separated string of branches to release on.
        type: string
        required: false
        default: main

      preset:
        description: Which preset to use for semantic-release.
        type: string
        required: false
        default: conventionalcommits

      plugins:
        description: A comma-separated string of default plugins to use.
        type: string
        required: false
        default: >
          @semantic-release/commit-analyzer,
          @semantic-release/release-notes-generator,
          @semantic-release/github

      additional_plugins:
        description: A newline-separated string of additional plugins to install.
        type: string
        required: false
        default: conventional-changelog-conventionalcommits

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install additional plugins
        env:
          ADDITIONAL_PLUGINS: ${{ inputs.additional_plugins }}
        run: |
          while read -r p
          do
            npm install "$p"
          done <<< "$ADDITIONAL_PLUGINS"

      - name: Release
        env:
          BRANCHES: ${{ inputs.branches }}
          PLUGINS: ${{ inputs.plugins }}
          PRESET: ${{ inputs.preset }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --branches "$BRANCHES" --plugins "$PLUGINS" --preset "$PRESET"
