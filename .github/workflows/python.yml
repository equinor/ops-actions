name: â™» python

on:
  workflow_call:
    inputs:
      working_directory:
        description: The path of the directory containing the Python application.
        type: string
        required: false
        default: "."

      python_version:
        description: The version of Python to install.
        type: string
        required: false
        default: latest

      venv_path:
        description: The path, relative to the working directory, to create a virtual Python environment at.
        type: string
        required: false

      requirement:
        description: The path, relative to the working directory, of a requirements file.
        type: string
        required: false
        default: requirements.txt

      pip_install_target:
        description: The path, relative to the working directory, of a target directory that PIP should install packages into.
        type: string
        required: false

      artifact_name:
        description: The name of the build artifact to upload.
        type: string
        required: false
        default: python-app

    outputs:
      artifact_name:
        description: The name of the uploaded artifact containing the application.
        value: ${{ inputs.artifact_name }}

permissions: {}

jobs:
  python:
    name: Python
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the repository

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: ${{ inputs.python_version }}

      - name: Create and activate virtual environment
        if: inputs.venv_path != ''
        env:
          VENV_PATH: ${{ inputs.venv_path }}
        run: |
          python -m venv "$VENV_PATH"
          source "$VENV_PATH/bin/activate"

      - name: Install dependencies
        if: inputs.requirement != ''
        env:
          PIP_INSTALL_REQUIREMENT: ${{ inputs.requirement }}
          PIP_INSTALL_TARGET: ${{ inputs.pip_install_target }}
        run: |
          python -m pip install --upgrade pip
          pip install --requirement "$PIP_INSTALL_REQUIREMENT" --target "$PIP_INSTALL_TARGET"

      - name: Create tarball
        id: tar
        run: |
          tarball="$RUNNER_TEMP/$ARTIFACT_NAME.tar"
          tar -cvf "$tarball" .
          echo "tarball=$tarball" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ steps.tar.outputs.tarball }}
