name: â™» python

on:
  workflow_call:
    inputs:
      working_directory:
        description: The path of the directory containing the Python application.
        type: string
        required: false
        default: "."

      python_version:
        description: The version of Python to install.
        type: string
        required: false
        default: latest

      venv_path:
        description: The path to create a virtual Python environment at (relative to working directory).
        type: string
        required: false

      pip_install_target:
        description: The target directory that PIP should install packages into (relative to working directory).
        type: string
        required: false

      artifact_name:
        description: The name of the build artifact to upload.
        type: string
        required: false
        default: python-app

    outputs:
      artifact_name:
        description: The name of the uploaded artifact containing the application.
        value: ${{ inputs.artifact_name }}

jobs:
  python:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Create and activate virtual environment
        if: inputs.venv_path != ''
        env:
          VENV_PATH: ${{ inputs.venv_path }}
        run: |
          python -m venv "$VENV_PATH"
          source "$VENV_PATH/bin/activate"

      - name: Install dependencies
        env:
          TARGET: ${{ inputs.pip_install_target }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target "$TARGET"

      - name: Zip
        id: zip
        env:
          ZIP_FILE: ${{ runner.temp }}/${{ inputs.artifact_name }}.zip
        run: |
          zip -r "$ZIP_FILE" .
          echo "zip_file=$ZIP_FILE" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ steps.zip.outputs.zip_file }}
