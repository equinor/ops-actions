name: â™» python

on:
  workflow_call:
    inputs:
      runs_on:
        description: The label of the runner (GitHub- or self-hosted) to run this workflow on. Defaults to `ubuntu-24.04`.
        type: string
        required: false
        default: ubuntu-24.04

      working_directory:
        description: The path of the directory containing the Python application.
        type: string
        required: false
        default: "."

      python_version:
        description: The version of Python to install.
        type: string
        required: false
        default: latest

      venv_path:
        description: The path, relative to the working directory, to create a virtual Python environment at.
        type: string
        required: false

      requirements:
        description: The path, relative to the working directory, of a pip requirements file.
        type: string
        required: false

      pip_target_dir:
        description: The path, relative to the working directory, of a target directory that pip should install packages into.
        type: string
        required: false

      artifact_name:
        description: The name of the build artifact to upload.
        type: string
        required: false
        default: python-app

    outputs:
      artifact_name:
        description: The name of the uploaded artifact containing the application.
        value: ${{ inputs.artifact_name }}

permissions: {}

jobs:
  python:
    name: Python
    runs-on: ${{ inputs.runs_on }}
    permissions:
      contents: read # Required to checkout the repository
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ inputs.python_version }}

      - name: Create and activate virtual environment
        if: inputs.venv_path != ''
        env:
          VENV_PATH: ${{ inputs.venv_path }}
        run: |
          python -m venv "$VENV_PATH"
          source "$VENV_PATH/bin/activate"

      - name: Install dependencies
        if: inputs.requirements != ''
        env:
          REQUIREMENTS: ${{ inputs.requirements }}
          PIP_TARGET_DIR: ${{ inputs.pip_target_dir }}
        run: |
          python -m pip install --upgrade pip
          pip install -r "$REQUIREMENTS" --target "$PIP_TARGET_DIR"

      - name: Create tarball
        id: tar
        run: |
          tarball="$RUNNER_TEMP/$ARTIFACT_NAME.tar.gz"
          tar -czf "$tarball" .
          echo "tarball=$tarball" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ steps.tar.outputs.tarball }}
