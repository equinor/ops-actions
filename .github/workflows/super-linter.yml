# Run GitHub Super-Linter to validate the codebase.
name: â™» super-linter

on:
  workflow_call:
    inputs:
      runs_on:
        description: The label of the runner (GitHub- or self-hosted) to run this workflow on. Defaults to `ubuntu-24.04`.
        type: string
        required: false
        default: ubuntu-24.04

      filter_regex_exclude:
        description: Exclude files from linting using a regex pattern.
        type: string
        required: false

      filter_regex_include:
        description: Include files in linting using a regex pattern.
        type: string
        required: false

permissions: {}

jobs:
  super-linter:
    name: Super-linter
    runs-on: ${{ inputs.runs_on }}
    permissions:
      contents: read # Required to checkout the repository
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0 # Required to get the list of files that changed across commits

      - name: Lint Codebase
        uses: super-linter/super-linter@12150456a73e248bdc94d0794898f94e23127c88
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: ${{ inputs.filter_regex_exclude }}
          FILTER_REGEX_INCLUDE: ${{ inputs.filter_regex_include }}
          # If triggered by PR, only validate changed files.
          VALIDATE_ALL_CODEBASE: ${{ github.event_name != 'pull_request' }}
          # Checkov and JSCPD ignore the above FILTER_REGEX_EXCLUDE, FILTER_REGEX_INCLUDE and VALIDATE_ALL_CODEBASE environment variables.
          # Explicitly disable these linters to prevent them from being run when they should not.
          VALIDATE_CHECKOV: false
          VALIDATE_JSCPD: false
          # For Python, prefer the Ruff linter over Flake8 and isort.
          # The Ruff linter is faster than, has feature parity with, and serves as a drop-in replacement for both Flake8 and isort.
          # The Ruff formatter also has feature parity with Black, however Super-linter does not yet support the Ruff formatter.
          # Ref: https://docs.astral.sh/ruff/
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          # Terrascan is not actively maintained, which results in outdated errors.
          # For example, if using the nullable argument in a Terraform variable block, Terrascan throws an error.
          # This argument was added in Terraform v1.1 (ref: https://developer.hashicorp.com/terraform/language/values/variables#disallowing-null-input-values).
          VALIDATE_TERRAFORM_TERRASCAN: false
          # Don't create status checks per linter.
          # Create GitHub Actions job summary instead.
          MULTI_STATUS: false
          ENABLE_GITHUB_ACTIONS_STEP_SUMMARY: true
