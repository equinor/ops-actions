name: â™» uv

on:
  workflow_call:
    inputs:
      runs_on:
        description: The label of the runner (GitHub- or self-hosted) to run this workflow on. Defaults to `ubuntu-24.04`.
        type: string
        required: false
        default: ubuntu-24.04

      working_directory:
        description: The working directory containing the `pyproject.toml` file.
        type: string
        required: false
        default: "."

      uv_version:
        description: The version of uv to install.
        type: string
        required: false
        default: latest

      artifact_name:
        description: The name of the build artifact to upload.
        type: string
        required: false
        default: uv-build-wheel

    outputs:
      artifact_name:
        description: The name of the uploaded build artifact.
        value: ${{ inputs.artifact_name }}

jobs:
  uv:
    name: uv
    runs-on: ${{ inputs.runs_on }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      # Install Python using the official action. This can be faster than
      # installing Python with the `uv python install` command, since GitHub
      # caches the Python versions alongside the runner.
      # Ref: https://docs.astral.sh/uv/guides/integration/github/#setting-up-python
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          # Use the pinned version for the project:
          python-version-file: ".python-version"

      - name: Setup uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6
        with:
          version: ${{ inputs.uv_version }}

      - name: Install project
        run: uv sync

      - name: Build distributions
        run: uv build

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ inputs.artifact_name }}
          # By default, the `uv build` command will build the project in the
          # working directory, and place the build artifacts in a `dist/` subdirectory.
          # Ref: https://docs.astral.sh/uv/concepts/projects/build/#using-uv-build
          path: ${{ inputs.working_directory }}/dist/
