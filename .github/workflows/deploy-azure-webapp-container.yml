# Login to Azure using OpenID Connect (OIDC), then deploy Docker image to Azure Web App.

# Default environment variables are available for the input app settings.
# See docs for list of default environment variables: https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
# Example app settings JSON:
#   {
#     "GITHUB_RUN_ID": "$GITHUB_RUN_ID"
#     "GITHUB_RUN_NUMBER": "$GITHUB_RUN_NUMBER"
#   }

on:
  workflow_call:
    inputs:
      environment:
        description: The name of the GitHub environment that this job references.
        type: string
        required: true

      image:
        description: The Docker image to deploy.
        type: string
        required: true

      app_name:
        description: The name of the Azure Web App to deploy the Docker image to.
        type: string
        required: true

      app_settings:
        description: The app settings to configure for the Azure Web App. Inline JSON or path of a JSON file.
        type: string
        default: "{}"
        required: false

    secrets:
      AZURE_CLIENT_ID:
        description: The client ID of the Azure AD service principal to use for authenticating to Azure.
        required: true

      AZURE_SUBSCRIPTION_ID:
        description: The ID of the Azure subscription to deploy the Docker image to.
        required: true

      AZURE_TENANT_ID:
        description: The ID of the Azure tenant to deploy the Docker image to.
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy.outputs.webapp-url }}

    # Set permissions required to login to Azure using OIDC.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ inputs.app_name }}
          images: ${{ inputs.image }}

      # Configure app settings by calling Azure REST API directly.
      # This will replace entire app settings object instead of simply adding new properties to it.
      - name: Configure app settings
        env:
          APP_NAME: ${{ inputs.app_name }}
          APP_SETTINGS: ${{ inputs.app_settings }}
        run: |
          app_id=$(az webapp list --query "[?name=='$APP_NAME'].id" -o tsv)

          if [[ -f "$APP_SETTINGS" ]]; then
            APP_SETTINGS=$(cat "$APP_SETTINGS")
          fi
          APP_SETTINGS=$(envsubst <<< "$APP_SETTINGS")
          body=$(jq '{properties: .}' <<< "$APP_SETTINGS")

          az rest -m PUT -u "$app_id/config/appsettings?api-version=2022-03-01" -b "$body" --query properties -o json
